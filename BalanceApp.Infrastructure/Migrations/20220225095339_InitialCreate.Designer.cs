// <auto-generated />
using System;
using BalanceApp.Infrastructure.Datas.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BalanceApp.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220225095339_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BalanceApp.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("BalanceApp.Domain.ValueObjects.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("balances", (string)null);
                });

            modelBuilder.Entity("BalanceApp.Domain.ValueObjects.BodyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("BodyMassIndex")
                        .HasColumnType("double precision");

                    b.Property<double>("BoneRate")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("FatMassRate")
                        .HasColumnType("double precision");

                    b.Property<double>("HeartBeat")
                        .HasColumnType("double precision");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("MuscleRate")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<double>("WaterRate")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("bodyDatas", (string)null);
                });

            modelBuilder.Entity("BalanceApp.Domain.ValueObjects.Balance", b =>
                {
                    b.HasOne("BalanceApp.Domain.Entities.User", null)
                        .WithMany("Balances")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BalanceApp.Domain.ValueObjects.BodyData", b =>
                {
                    b.HasOne("BalanceApp.Domain.Entities.User", null)
                        .WithMany("BodyDatas")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BalanceApp.Domain.Entities.User", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("BodyDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
